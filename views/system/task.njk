{% extends "layout.njk" %}

{% block extra_header %}
    <style>
    .content > *:nth-child(2) {
        margin-top: 6px;
    }
    .list .item {
        margin-top: 10px;
    }
    </style>
    <script src="/static/self/js/request_utils.js"></script>
{% endblock %}

{% block content %}
    <input type="hidden" id="url" value="{% if task.type == 3 %}judgement{% elif task.type == 1 %}paste/{{ task.oid }}{% else %}article/{{ task.oid }}{% endif %}">
    <div class="ui grid">
        <div class="sixteen wide column">
            <div class="card shadow">
                <h1 class="ui center aligned header">
                    <span><i class="ui info icon colored"></i> 任务详情 - {{ task.id }}</span>
                    <div class="sub header" style="margin-top: 10px;">
                        入队时间：{{ task.created_at }}
                    </div>
                </h1>
            </div>
        </div>
    </div>

    <div class="ui grid">
        <div class="eight wide column">
            <div class="card shadow outline">
                <h3 class="ui dividing header">
                    <i class="list icon"></i>
                    任务详情
                </h3>

                <div class="ui list" style="margin-top: 1em;">
                    <div class="item">
                        <div class="content">
                            <div class="header">
                                <i class="info circle icon"></i>
                                信息
                            </div>
                            <div id="task-info">{{ task.info }}</div>
                        </div>
                    </div>
                    <div class="item">
                        <div class="content">
                            <div class="header">
                                <i class="clock outline icon"></i>
                                过期时间
                            </div>
                            <div id="task-expire">{{ task.expire_time }}</div>
                        </div>
                    </div>
                    <div class="item">
                        <div class="content">
                            <div class="header">
                                <i class="flag icon"></i>
                                状态
                            </div>
                            <span id="task-status" class="ui label {{ 'blue' if task.status == 'Pending' else ('yellow' if task.status == 'Processing' else ('green' if task.status == 'Completed' else 'red'))}}">
                                {{ task.status }} {{ "/" if task.status == "Pending" }} {{ task.position if task.status == 'Pending' else '' }}
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="eight wide column">
            <div class="card shadow outline">
                <h3 class="ui dividing header">
                    <i class="list icon"></i>
                    任务详情
                </h3>

                <div class="ui list" style="margin-top: 1em;">
                    <div class="item">
                        <div class="content">
                            <div class="header">
                                <i class="info circle icon"></i>
                                任务类型
                            </div>
                            <div>{% if task.type == 3 %}陶片放逐保存 (Type = 3){% elif task.type == 1 %}剪贴板保存 (Type = 1){% else %}专栏文章保存 (Type = 0){% endif %}</div>
                        </div>
                    </div>
                    <div class="item">
                        <div class="content">
                            <div class="header">
                                <i class="paperclip icon"></i>
                                任务目标 ID
                            </div>
                            <div>{{ task.oid }}</div>
                        </div>
                    </div>
                    <div class="item">
                        <div class="content">
                            <div class="header">
                                <i class="cog icon"></i>
                                操作
                            </div>
                            <button id="goto-btn" class="ui mini positive button" {{ '' if task.status == 'Completed' else 'disabled' }} onclick="window.location.href='{% if task.type == 3 %}/judgement{% elif task.type == 1 %}/paste/{{ task.oid }}{% else %}/article/{{ task.oid }}{% endif %}'">
                                <i class="ui icon paper plane"></i> 跳转
                            </button>
                            <button id="save-btn" class="ui mini teal button" style="display: {{ 'inline-block' if task.status == 'Failed' else 'none' }};">
                                <i class="ui icon redo alternate"></i> 重试
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
		document.addEventListener("DOMContentLoaded", () => {
			const statusLabel = document.getElementById("task-status");
			const infoEl = document.getElementById("task-info");
			const expireEl = document.getElementById("task-expire");

			function setStatus(status, position) {
				statusLabel.className = "ui label";
				if (status === "Pending") {
					statusLabel.classList.add("blue");
				} else if (status === "Processing") {
					statusLabel.classList.add("yellow");
				} else if (status === "Completed") {
					statusLabel.classList.add("green");
				} else if (status === "Failed") {
					statusLabel.classList.add("red");
					document.getElementById("save-btn").style.display = "inline-block";
				}
				statusLabel.textContent = status + (status === "Pending" ? ` / ${position}` : "");
			}

			async function fetchTask() {
				try {
					const res = await fetch(`/task/query?id={{ task.id }}`);
					if (!res.ok) return;
					const data = await res.json();
					infoEl.textContent = data.tasks[0].info;
					expireEl.textContent = data.tasks[0].expire_time;
					setStatus(data.tasks[0].status, data.tasks[0].position);
					if (data.tasks[0].status === "Completed" || data.tasks[0].status === "Failed") {
                        clearInterval(id);
                        document.getElementById("goto-btn").disabled = false;
                    }
				} catch (e) {
					console.error(`Failed to update task status: ${e.message}`);
				}
			}
			let id = setInterval(fetchTask, 3000);
		});
    </script>
{% endblock %}
