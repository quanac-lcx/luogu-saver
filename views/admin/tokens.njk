{% extends "../layout.njk" %}
{% from "../components/pagination.njk" import pagination %}
{% from "../components/search.njk" import searchBox %}

{% block content %}
<div class="ui grid">
    <div class="sixteen wide column">
        <h1 class="ui header">
            <i class="ui icon key"></i>
            <div class="content">
                Token 管理
                <div class="sub header">访问凭据管理与监控</div>
            </div>
        </h1>
    </div>
</div>

{# 搜索框 #}
{{ searchBox(search, '搜索 UID...') }}

{% if items.length > 0 %}
<div class="ui three column stackable grid">
    {% for token in items %}
    <div class="column">
        <div class="card shadow outline">
            <h4 class="ui header">#{{ token.id }}</h4>
            <div class="meta gray">创建时间: {{ token.created_at }}</div>
            <div class="meta gray">Luogu User ID:{{ token.uid }} (role = {{ token.role }})</div>
            <div style="margin-top: 15px;">
                <button class="ui red button" onclick="deleteToken('{{ token.id }}')">
                    <i class="ui icon trash"></i>
                    删除
                </button>
            </div>
        </div>
    </div>
    {% endfor %}
</div>

{# 使用可重用的分页组件 #}
{{ pagination(currentPage, totalPages, '/admin/tokens', {search: search}) }}

{% else %}
<div class="card shadow" style="text-align: center; padding: 60px 30px;">
    <div class="ui icon header">
        <i class="search icon"></i>
        没有找到 Token
    </div>
</div>
{% endif %}

<script>
function deleteToken(id) {
    Swal.fire({
        title: '确认删除',
        text: '确定要删除这个 Token 吗？此操作不可恢复。',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: '确认删除',
        cancelButtonText: '取消',
        confirmButtonColor: '#d33'
    }).then((result) => {
        if (result.isConfirmed) {
            $.ajax({
                url: `/admin/api/tokens/${id}`,
                method: 'DELETE'
            })
                .done(function(res) {
                    if (res.success) {
                        Swal.fire('删除成功', res.message, 'success').then(() => {
                            window.location.reload();
                        });
                    } else {
                        Swal.fire('删除失败', res.message, 'error');
                    }
                })
                .fail(function() {
                    Swal.fire('错误', '网络或服务器异常', 'error');
                });
        }
    });
}
</script>
{% endblock %}